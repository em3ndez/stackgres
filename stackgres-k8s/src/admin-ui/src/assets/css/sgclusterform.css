.scriptFieldset:first-child {
    border-top: 0;
    margin-top: 0;
    padding-top: 0;
}

input[type="checkbox"].plain:checked {
    border-color: var(--blue);
    background: var(--blue);
}

input[type="checkbox"].plain {
    width: 14px;
    height: 14px;
    border-radius: 2px;
    border: 1px solid var(--borderColor);
    padding: 0;
    display: inline-block;
    cursor: pointer;
    position: relative;
    top: 0;
    background: var(--bgColor);
}

input[type="checkbox"].plain:checked:after {
    border: 2px solid #fff;
    width: 3px;
    height: 7px;
    content: " ";
    border-left: 0;
    border-top: 0;
    display: block;
    transform: rotate(45deg);
    position: relative;
    top: 0px;
    left: 4px;
}

input[type="radio"]:checked {
    background: var(--blue);
}

.searchBar.extensions #keyword {
    width: 100%;
    max-width: 100%;
    height: 38px;
    font-size: 100%;
}

.searchBar.extensions {
    position: relative;
    display: block;
    width: 70%;
    float: left;
}


.searchBar .clear {
    position: absolute;
    top: 15px;
    right: 10px;
    border: 0;
    padding: 11px 0;
    z-index: 1;
}

.searchBar .clear:hover {
    background: transparent;
}

.extLicense {
    width: 25%;
    float: right;
}

.notCompatible svg {
    fill: red;
    width: 13px;
    position: relative;
    top: 1px;
}

.colorRed svg path {
    fill: red;
}

ul.extensionsList {
    list-style: none;
    max-height: 40vh;
    overflow-y: auto;
    margin-bottom: 20px;
    padding-right: 10px;
}

.extension > label {
    cursor: pointer;
    width: 50px;
    display: inline-block;
    text-align: center;
}

.extInfo {
    cursor: pointer;
    width: calc(100% - 50px);
    display: inline-block;
}

.extName {
    font-weight: bold;
}

.extension > label input {
    margin: 0 40px 0 14px;
}

span.notCompatible {
    margin-left: 5px;
}

label[disabled], input[disabled] {
    cursor: not-allowed !important;
}

button.toggleExt {
    top: 0;
    position: absolute;
    right: 0;
    width: 35px;
    height: 35px;
    color: transparent;
}

button.toggleExt:before {
    content: " ";
    top: 10px;
    position: absolute;
    right: 12px;
    width: 8px;
    height: 8px;
    border: 2px solid var(--textColor);
    border-radius: 0;
    transform: rotate(45deg);
    border-top: 0;
    border-left: 0;
    opacity: .4;
}

.extension.show button.toggleExt:before {
    transform: rotate(-135deg);
    top: 14px;
}

li.extension {
    padding: 3px 0;
    position: relative;
    width: 100%;
    border: 1px solid transparent;
}

li.extension:nth-child(even), li.extension.notFound {
    background: var(--activeBg);
    border: 1px solid var(--activeBg);
}

.darkmode li.extension:nth-child(even) .header, .darkmode .form .extension select {
    border-color: #555;
}

.extDetails {
    padding: 20px 13px 10px;
}

.extDetails .description {
    line-height: 1.5;
}

.extHead .install {
    margin-right: 30px;
}

.extHead {
    font-weight: bold;
    margin: 10px 0;
    display: inline-block;
}

li.extension.notFound {
    display: none;
    padding: 12px 70px;
}

li.extension.notFound:first-child:last-child {
    display: block;
}

li.extension.show .extInfo:after {
    height: 1px;
    width: calc(100% + 68px);
    left: -68px;
    position: relative;
    content: " ";
    margin-top: 10px;
    display: block;
    background: var(--borderColor);
}

li.extension:nth-child(even).show > label:after  {
    background: var(--textColor);
    opacity: .2;
}

li.extension.show {
    border-color: var(--borderColor);
    margin-bottom: 10px;
}

.darkmode li.extension:nth-child(even).show {
    border-color: #555;
}

.colorRed {
    color: red;
}

.extDetails * + .header {
    margin-top: 25px;
}

.extension .tags {
    margin-bottom: 5px;
}

.extTag {
    display: inline-block;
    margin-right: 10px;
    border: 1px solid;
    border-radius: 10px;
    padding: 3px 10px;
    font-size: 85%;
    font-weight: bold;
}

.extDetails .notCompatible {
    display: block;
    border: 1px solid red;
    border-radius: 3px;
    padding: 10px;
    background: rgb(255 0 0 / 5%);
}

.extDetails .notCompatible strong {
    display: block;
}

.darkmode .extension > label input {
    background: #fbfbfb;
}

.extLinks li {
    margin-bottom: 10px;
}

select.extVersion {
    margin-bottom: 0;
    margin-top: 2px;
    padding: 7px;
    height: auto;
    background-position-x: 90%;
}

.versionContainer {
    min-height: 95px;
}

ul#postgresVersion.active {
    position: absolute;
    width: 100%;
    z-index: 10;
    max-height: 30vh;
    overflow: auto;
}

ul#postgresVersion + .helpTooltip {
    transform: translate(20px, -53px);
}

ul#postgresVersion.active + .helpTooltip {
    transform: translate(20px, 10px);
}

ul.select li.selected {
    position: sticky;
    top: 0;
}

.affinityValues a.addRow {
    transform: translateY(-75px);
    float: right;
}

.extHead span.name, .extensionsList span.name {
    width: 180px;
    display: inline-block;
}

.extHead span.version, .extensionsList span.version {
    width: 75px;
    display: inline-block;
}

.extensionsList span.version {
    font-weight: normal;
}

.extHead span.description, .extensionsList span.description {
    display: inline-block;
    margin-left: 15px;
    width: calc(100% - 350px);
}

.extensionsList span.description {
    font-weight: normal;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    transform: translateY(3px);
    width: calc(100% - 320px);
}

.extension a.newTab {
    width: 11px;
    height: 11px;
    display: inline-block;
    transform: translate(4px, 1px);
    position: absolute;
    right: 20px;
}

.contentTooltip #clusterDetails {
    margin-right: 10px;
}

.warning.babelfish {
    top: -5px;
    position: relative;
    margin-bottom: 25px;
}

input.affinityWeight + span {
    left: -20px;
    top: -15px;
}

input.affinityWeight {
    width: calc(100% - 25px);
}

fieldset.noRepeater {
    padding: 0 0 10px;
    border: 0;
    margin-bottom: -10px;
}

#podsMetadata fieldset, #podsScheduling .repeater > fieldset {
    padding-bottom: 10px;
}

fieldset.noMargin, .scriptFieldset fieldset fieldset:last-of-type {
    margin-bottom: 0;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}

.scriptFieldset fieldset fieldset .row {
    margin-bottom: 20px;
}

.scheduling .fieldsetFooter {
    margin-bottom: 20px;
}

.searchBar + .helpTooltip {
    top: -15px;
}

.warning.babelfish label, .warning.babelfish p, .warning.babelfish .col {
    margin-bottom: 0;
}

.warning.babelfish:before {
    left: 34%;
}

.warning.babelfish .helpTooltip {
    transform: translate(20px, -30px);
}

body:not(.darkmode) label[for="babelfish"] svg path[fill="#FFF"] {
    fill: #3452a8 !important;
}

.row-50.noMargin {
    margin-bottom: -20px;
}

.noMarginTop {
    margin-top: -20px;
}

.cron {
    gap: 15px;
}

.cron > * {
    flex-grow: 1;
}


form#createCluster, form#createShardedCluster {
    width: 1120px;
    max-width: 100%;
}

.annotation.repeater .row:last-child input {
    margin-bottom: -10px;
}