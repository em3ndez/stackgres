{
  "id": "23710065-0108-4be6-b5ff-f4522c05c343",
  "realm": "stackgres",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxTemporaryLockouts": 0,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "c763fdf3-7763-4b9d-90d6-acd685101eca",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "23710065-0108-4be6-b5ff-f4522c05c343",
        "attributes": {}
      },
      {
        "id": "eed6f6b6-8a7e-4863-a5a0-44aefc2a61cb",
        "name": "default-roles-stackgres",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "view-profile",
              "manage-account"
            ]
          }
        },
        "clientRole": false,
        "containerId": "23710065-0108-4be6-b5ff-f4522c05c343",
        "attributes": {}
      },
      {
        "id": "46ade2ab-2808-4424-b12d-c655b3027ff9",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "23710065-0108-4be6-b5ff-f4522c05c343",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "695f404a-a767-46d3-9e84-32707239e348",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "cbcadc13-3f1c-4d3c-923b-83886dcc7704",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "1d1177b7-d360-4dfb-9081-33ae267f1b1c",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "a7d277d3-83e0-41da-b157-8a5cf6b34b18",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "e4ff4d99-4280-4792-b505-19e82b8ba9bc",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "7dab5b82-82c6-4bcb-99ca-239bbad27762",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "a004d5a6-ec18-4aca-951e-f86126b6d661",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "7f81186d-0394-4122-933b-cf252a260d69",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "95c789fe-f73a-4238-883f-06e27dc90516",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "9033126e-48ae-446b-ad85-4853f0fd981b",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "01df8d78-8792-4426-a74a-de0f91c26bd2",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-realm",
                "query-groups",
                "manage-realm",
                "view-clients",
                "view-authorization",
                "manage-authorization",
                "view-identity-providers",
                "manage-events",
                "query-realms",
                "query-clients",
                "manage-identity-providers",
                "impersonation",
                "query-users",
                "create-client",
                "view-users",
                "manage-clients",
                "manage-users",
                "view-events"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "8f873ed6-c67a-4792-913f-26f1568a0390",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "a9059171-7c3a-4072-9b8c-84cace47d04e",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "a0036223-ea75-47e7-8a32-302457037b3c",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "d29178cf-ba50-48e2-95a8-ddc773e749f8",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "5eabd8f3-004c-4510-8f1e-836064c9bb51",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "5d8e0763-e2f1-4eb5-b024-30a2f277419f",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "0eb6a365-5b99-477e-b6d3-4d4bc9de24a4",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        },
        {
          "id": "5fc9f42a-3bca-425e-9691-09630443f62c",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "web-api": [],
      "dex-client": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "9095d19b-7679-4984-acff-2906155efd8c",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "395c360e-9ccd-41c5-8e0f-2ad22075f233",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "7fd5175e-c3f4-49bc-9789-bfd57f56ff82",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "28ab4bf9-ad95-4f7f-a4e3-f707ca53997b",
          "attributes": {}
        },
        {
          "id": "4d6e1f01-3dd8-4f66-b20f-dfb57811da3c",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "28ab4bf9-ad95-4f7f-a4e3-f707ca53997b",
          "attributes": {}
        },
        {
          "id": "f1c54397-2223-412b-a118-227061c4408b",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "28ab4bf9-ad95-4f7f-a4e3-f707ca53997b",
          "attributes": {}
        },
        {
          "id": "fb1e91c2-6be8-4775-b2e3-48eb664e92bd",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "28ab4bf9-ad95-4f7f-a4e3-f707ca53997b",
          "attributes": {}
        },
        {
          "id": "7a70ecac-dd59-45b4-aacf-59bee843c318",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "28ab4bf9-ad95-4f7f-a4e3-f707ca53997b",
          "attributes": {}
        },
        {
          "id": "985f3dc0-0b9b-4a78-8060-b5f045b8e93f",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "28ab4bf9-ad95-4f7f-a4e3-f707ca53997b",
          "attributes": {}
        },
        {
          "id": "810b169f-7c36-4b89-a8bb-94e3dad90bfc",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "28ab4bf9-ad95-4f7f-a4e3-f707ca53997b",
          "attributes": {}
        },
        {
          "id": "f15b80ad-8b55-47ad-bb5f-be645dea54f6",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "28ab4bf9-ad95-4f7f-a4e3-f707ca53997b",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "eed6f6b6-8a7e-4863-a5a0-44aefc2a61cb",
    "name": "default-roles-stackgres",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "23710065-0108-4be6-b5ff-f4522c05c343"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": [
    "totpAppFreeOTPName",
    "totpAppGoogleName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "localizationTexts": {},
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyExtraOrigins": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessExtraOrigins": [],
  "users": [
    {
      "id": "e5c986ad-5342-463a-b582-5f7c2cbd9b73",
      "username": "admin",
      "firstName": "Admin",
      "email": "admin@example.com",
      "emailVerified": false,
      "createdTimestamp": 1715616069859,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "fb9b468b-6f3f-419b-b93b-4ac75434fb5b",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1715616080897,
          "secretData": "{\"value\":\"JBgcVXDHmHAlg2F5FQ25H0jQikgbsMbZjzGwdy74yE0OwitZyLTyJh35jX6qAttLZZjJ4ZF9rfVwEQmWfMd/LA==\",\"salt\":\"4g3ukRgr34tASQ7kO5xfeg==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-stackgres"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "da03e347-0d85-483c-bbd8-7c81c8333b9f",
      "username": "stackgres-demo",
      "firstName": "Demo",
      "email": "demo@example.com",
      "emailVerified": false,
      "createdTimestamp": 1715615904793,
      "enabled": true,
      "totp": false,
      "credentials": [
        {
          "id": "d698d68e-eb54-4dd7-9a7c-c2734a4134c8",
          "type": "password",
          "userLabel": "My password",
          "createdDate": 1715615919545,
          "secretData": "{\"value\":\"85o7IlKQatTGg2GIiCxuzDLB8b4+mAmCRM7zgHNmy2Yb3/8fk92T9HV93R7gNWIzwrRhBU7qm7om11MdD7JWMw==\",\"salt\":\"N755iQZPEjH56c9GT5xd9Q==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-stackgres"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "28ab4bf9-ad95-4f7f-a4e3-f707ca53997b",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/stackgres/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/stackgres/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "bcd27648-9912-4721-9300-deb8c16aa66d",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/stackgres/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/stackgres/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "22474075-22a2-49aa-b6ef-7e86d99a3599",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6a4ce50c-01f6-48d8-9aef-11f1186cf0b9",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "395c360e-9ccd-41c5-8e0f-2ad22075f233",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e9909dff-228c-4b9a-8550-eb87c84a76cd",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "6cfa4a5f-e821-49b2-9b81-0ee1b047978a",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/stackgres/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/stackgres/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "cc85c669-a4ea-4310-a0ff-789046a43472",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0715e487-bc8f-4b5d-b9cf-de2db670e528",
      "clientId": "web-api",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "kc-client-secret",
      "redirectUris": [
        "${STACKGRES_URL}/stackgres/auth/external"
      ],
      "webOrigins": [
        "${STACKGRES_URL}"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1715610829",
        "backchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b5abf282-f29d-4069-acbd-b7b4b64c6cb9",
      "clientId": "dex-client",
      "name": "",
      "description": "",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "dex-client-secret",
      "redirectUris": [
        "${DEX_URL}/callback"
      ],
      "webOrigins": [
        "${DEX_URL}"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1715610829",
        "backchannel.logout.session.required": "true",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "17992a9b-f648-4e28-863d-509e07345ea4",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2d7dcd8e-b549-4530-beb3-86d676511b7d",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "0eff4af9-28c8-4fbc-8007-696654e111da",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "63fa08ff-377e-4127-81d6-075753adab26",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "18999ed7-7329-438f-bd86-457e48f004a5",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "26c03f85-8ddf-434c-aa4b-f03c992e40fd",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ae100e72-34dd-4869-961d-226f6579585e",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4533b05f-2eec-4687-9c84-714e83f63565",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2a8d2b89-d8ce-4152-889d-4e0f7ac28156",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e16ba854-12cb-4065-a3b5-5e55b2ee4640",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "98218a8f-e905-44a5-898b-27fbdaa52c39",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c3040913-ba93-419e-a52d-31c425b3ed4a",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fad3e427-0922-4577-879c-ba68fb547d3a",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c4990abf-2591-4b16-92e7-68d54cbfdaf8",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "55f68ccb-efea-4d8b-800d-70f76175f292",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1c221db8-307d-4211-aa97-e77b76444066",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "35238b06-2303-41d1-8151-0a45f3ea3fc5",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "c58f93ef-c348-415d-b083-37c9a5a0f593",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "1f475043-e603-4031-af46-8754561e39f7",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "20b627f2-7d68-40f9-a40e-db224f0ed84f",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "07d8b00b-fac4-4460-962e-ff19c604d0df",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "5681b7a3-c7b3-450a-92a7-47d905f14449",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "0a5fa169-efcf-417f-94e6-13c6300b794d",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "63167d58-611f-483a-bebb-7fa42a3e3711",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "03b25c14-839e-4547-b625-24f0cf3dcb2e",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e030b0a4-aff1-46b4-87be-10eaba751f7e",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fd0e5063-15c8-409c-9100-b89369c93085",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "278b6693-4c80-4d02-9424-735d1b895245",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "430385c3-cb3b-4cfe-b4af-8e12762fea08",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "dc31c41d-dabe-439f-9240-f0b0bb18d053",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "8f8adbf9-4d70-4fda-887f-18251c3e6ab0",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "8fa21548-1f97-4cbe-8893-13061e1273f5",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "introspection.token.claim": "true",
            "access.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "c46a5059-28cd-4e0d-9609-819ecf8b0406",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "64a4865c-7861-4785-a501-64763f835dad",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "35e87182-0147-43cd-b8b1-396007c1b42b",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "introspection.token.claim": "true",
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "35f41076-8530-42f6-a7d4-c2d0a3c4040a",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "368d472a-4ff1-40a9-b8c8-3d7bfd54725d",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "introspection.token.claim": "true",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "referrerPolicy": "no-referrer",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "a286c547-4527-4b44-bce3-7b34a5b72171",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "71417439-b2d6-415d-a567-9d75a67feb83",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "22705db3-38c6-4c91-8e81-0e496e0bc16a",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      },
      {
        "id": "cafeee1c-2969-4564-97c7-deff060ed143",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "ecb6120f-31e3-4a7e-afc3-3d16f2a0fab3",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "da5f9e9d-4010-40f6-accb-e4cc804242a3",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "b1025519-764b-450b-bafe-5fa0c3f62b1a",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "saml-user-property-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        }
      },
      {
        "id": "eb258cd0-85bd-4599-977f-c4e6a5fa3cd3",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "d7ba0ae7-1689-4d26-8188-a0bc1ec2aa55",
        "name": "hmac-generated-hs512",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "fb7af0c0-fd0d-4b0b-9ae3-ecb2609cbd6e"
          ],
          "secret": [
            "d3g292I3rEA2Mq58BngXfhU3HS6ShPFc67koGlOu9iOqWwGBgtlZkrN7Yri0Q4I1kibO_EYOuuntMZ1FZ6h4jqJ0BHHbYVwsXc3UZI9yZSu4eI8HIkF6XDtteEGXKBK-yqIklnqEGlaLZ7r7Ttgfl7I2aldMKlm_GHGRcNwEjjU"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS512"
          ]
        }
      },
      {
        "id": "90b2a3e1-c950-4033-be06-d336aa28ffa2",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAqjWeIZSur3CVqJ1r1pD0S4vEvVBv8NVgxD7E2IvXepasUD2I9iD1Ipw/4FTqNcmW0V4EcRvSs+GgI2xOUj6PLZGiQRlVLZAEOr0NVDb/bhpnbHhnCm9dq6qsxykKWxyaaen1fPo2IHB9R5O0cV70tqgMMgqlyYo1pjIaBVZaAn6Sws9lbaWLFyVetLgXw8vuQ1etIlWoYF7MFlk6gJqh8N/QsbSh+dMG1Ryx9AtXPLzjUK73JVAIzUEBmIRD/4RL6JJrziVaL/12M8aqKwgxeMufoShgGvywxqYoXlaolGNjI0tCybL4n2S9+qCzT0xrty3SKKwXAqusAMDEkcaPAwIDAQABAoIBAADGkxyUEOJmdkgjxNoKzxIzu4chVraXl66imphiCsQEQRocgwNGzdcv3xqmnb/2VeRJCWbP5FCYNqKdW74ENaLU3GhvinPVXto7AlSKlkoU1Lkp005jiN8UvV+AUGEZ6u+QoWMbFiQPtIJ0VIjaZe3EgPRkGAf9w+t9+aBh7wcT4ASedgJudTesh+Iyvr2xck2EhRaC5DBEzYZHWRjxG7WaalSW3Nn2u4VBEJGt74dyB9I1u/VbBL17b8hxiRefer/i/aGhuvQzQm0STHnUdVVudfU3Iq+AuE4P3ALwyGBLMD3Ax2hKWPb126jijKn1ISh/NSnNA15Zp/WsflCxrAECgYEA3oIqgDVJU4xJlyYTtuVUB2NwPEEo35rLKc7iPnVJ5Q3K4i6FHUp5GYXoF1YAlOM8TMZ4nPltLRRR5ZKpL4r5OFoOa0i08d3HyYnw4i5AY9PT1y0sQqn/XjVLbeo8A0LaXQpBqjbme8Ldcp4jcwu652sP1yxuDG7IsLt9COlnoncCgYEAw9Q7yQbRFtulTTfRSaLhDFV8EJExU8cDPVolO8u15NlCs+/gkbDZzC2PnNYuS3OYEue8fmFVoiZ/KvuVMS0yL4dPRbOzVYYG2hgSK05D8uG3Kd+efFKkWC7thcSQ8hwxtUpy4xXdspj3VZTho0IH/TBf/GgXUx+UbiFymX89LtUCgYEAs+K553Ks+E2HRRo0f/2A5IRAvYXUPIoRS5iFEgeSmQqAhkEjvt1xb+/xBcSyravUGSGvawC/gd1WpGngO554A1XTKGrcVll9ZnMNel34EnyzW9eaW77BxHEDrTXcFKrcjLF5CtpdlZqhm0M714uZK/RDFytFQOnjd/XrjOPds9sCgYBhATDcU9QfTo6DwbKal2SDh5T9X+7fYSXprk3jYPWpdzXjjF/hy4kX6znIpxAnsAsU0lY9BFo3CHrV/+nXglvpz00lae7b3phmUKYvbYWbOtRQmcUYMJfYVuax7L0gMXcuJsLiWmKHpd5fNnDPPlZWxS/HCIkFVA9ivo7WGoFkQQKBgCBLf2WPEI6y0aJ1Zh3WGRy34U+GfaVpCm4f8crW9Qhty0qIOPrvK/x83ggVrQaoe1NNeMhT8sstMcf2RGyiO6NfbkmQPVWWe+NXoO52UIy7zVuQN09eUYTbg4SXqr5236loJDDBq2ZHnmztDIclowwvhxc5jjc5z3WiYZ1Vc2/w"
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICoTCCAYkCBgGPclc3ZjANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlzdGFja2dyZXMwHhcNMjQwNTEzMTQyMjQ5WhcNMzQwNTEzMTQyNDI5WjAUMRIwEAYDVQQDDAlzdGFja2dyZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCqNZ4hlK6vcJWonWvWkPRLi8S9UG/w1WDEPsTYi9d6lqxQPYj2IPUinD/gVOo1yZbRXgRxG9Kz4aAjbE5SPo8tkaJBGVUtkAQ6vQ1UNv9uGmdseGcKb12rqqzHKQpbHJpp6fV8+jYgcH1Hk7RxXvS2qAwyCqXJijWmMhoFVloCfpLCz2VtpYsXJV60uBfDy+5DV60iVahgXswWWTqAmqHw39CxtKH50wbVHLH0C1c8vONQrvclUAjNQQGYhEP/hEvokmvOJVov/XYzxqorCDF4y5+hKGAa/LDGpiheVqiUY2MjS0LJsvifZL36oLNPTGu3LdIorBcCq6wAwMSRxo8DAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAEarYp/FyLbmd8fZqDwAwYwbsGLYTbnVFUtEa9IsZZe2n9iE4TFKYTbg/HR4Y9xcQ2MXD67xk/YCGJ7RQXnRjR4hrnJpkdzkCfexNT86YlxAketsKG1ZQwfzVRoway+l0nezn/w9Bj2J97+B8rBCNeh20EGKm2OzeUYcuDYcBsKkNWl0iW8/gvj0SwX7xeZoIZ5xxpT7hoa4sfVLbBTx4PXOFO/D/t79q2dJ6F7fFLYD0TOsSawjVfaZ56BKtVCnATJ76LpoMIhWq6fY2MT48nQAHEJbtBSk8OD5huFYkxglolB0aaKQJ2mRTgItyYifpkUvkLQr4rIDeSwAP4j+wzk="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "792afdae-a483-4648-99d9-5fb132be4f11",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEowIBAAKCAQEAh6QgLgAfg9Dqj82kpl7OHFXpHOpfXko8BzSXpN5tOJgcuMF7j2wi3zTcfUzJuRcSuFAaohoev7dEyEWp9O3Y6JKufC/hZ9n1G3AmMfWCpWOWs3VJ7erjYdWSCo9duDwXZ1dIZwJfWHwL6xpFgzBpWX7q0xvt0MOmHmTv8WrtTChFSInelaoLz8XCy/3YaadboJrjVrIExmh1D+5bz9bIVh0lR8Yc/zJksTumM3ziwvA77JJp3e379Ji21rXyhuIDL/3d7ZiUlEW36HXIw5zLg2HgJmtUZuEd5GBdT8i2uLNIS+2PUx+l74VJOpNo05RgNV7kMpGd9f4QUuATNRpPowIDAQABAoIBACYsGsBHWZcjlrdklKcbfB6+UK3KCY/EDXOrqdeEnzEzobWfAdJhiMjPHBQJJaX4p9SF+pDPEAM9JNbFwChFPWtqSD97zBAJZzDTFXSu1pcL2U/kvKr/lQEl9QUSxrm/84gqKJ6QrNt+gW4nBRP/7k346UYDEKDVRq08E8iZonFxZPUgt+eUBOsNZe5uboKeLXvVGL6ADiSpy7YBoytDExpU1Q31kXEE4nSBeiJumfcKtgDcNb2Oc8d5E7olfvPB2RUoIiL/dLfGNyLNAsHIJT1yFwiqqVEQBHOdQEsZp3zzyrMVSvV4GjSDL8SCOlfe3B2olL7bTbUKx9e5DGBpKzUCgYEAvQE9RLG3GB8dpuZFL1xysvikkNnSS/TK99JxyMIrFa6XkQqjveH5n6ngMP/ZQyQYP3gFJw/QgMfvUrMmtKQgPLiLiYQ7HZy/GhJjaszJ4Km/JgK8hPmXsw8slJ8HvtKVNKGp7Qxv+bkPAVdzzptc2Ll43gRQk+KX58C9ILRKJWUCgYEAt7iIHLbjTxcjD22m/dvto6Nk/Pv2zYLd1vb4YG8AnnW/iZwEjuVHqBN7ij7Sxq1t63U8ZLJr4sqZkJ83JH7NHhz8dGrlx4nWmH36lRz5nXsAqzUnxQ4lpdQzORvFZRmhTGNtMplesWqOWGGSiGOai0XlD5CIR1vv8vjoQNuN9GcCgYAedFSq/PfDqz/b5L7BIuRYcjgSHwcDti3+QKqU7rSCid9iP5SixAa082pses1HREmj8HLkGGhAV/b4HGXgNZH8NsBFKElePCOOz+e1Dcp5qOBj/4zg4FbRQ2CrkfRtiwD/ugznZVmlo2wHi0/duqr7QOd43rkdGyXe8e+HlYVdAQKBgQCXoCx1xlsDw0ykRxMzIHeYPhny0OB37DG6YEnNDM+t9/AEWkdIx+HDzZCAIClE342AbllRog94NU1YFo8kB6Kx36pbSn4pmJELea19s1QvrHx40H3qHCrmGaPM1iarseN1b/mHcRy9v/uK5bxR5CKAH0dU+Sv/+Nin5tWH8avOsQKBgEpImZvxn8zvRqLjvH2vTxd9mFcPF7Sg9Y8vrKbm5ObA40Ebl8aeQ/c+nIzXbOUoxL+uObPWthl00dr5PBes5vCKtzBZyDhVBXOqlA9QjUnrG20SU8dQ6qN3XGJ1vlFkt1xy2SLU+T3nx0ioKTErt3ZCZfw8cPyWG10aC7onbv5X"
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICoTCCAYkCBgGPclc4ZTANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAlzdGFja2dyZXMwHhcNMjQwNTEzMTQyMjQ5WhcNMzQwNTEzMTQyNDI5WjAUMRIwEAYDVQQDDAlzdGFja2dyZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCHpCAuAB+D0OqPzaSmXs4cVekc6l9eSjwHNJek3m04mBy4wXuPbCLfNNx9TMm5FxK4UBqiGh6/t0TIRan07djokq58L+Fn2fUbcCYx9YKlY5azdUnt6uNh1ZIKj124PBdnV0hnAl9YfAvrGkWDMGlZfurTG+3Qw6YeZO/xau1MKEVIid6VqgvPxcLL/dhpp1ugmuNWsgTGaHUP7lvP1shWHSVHxhz/MmSxO6YzfOLC8Dvskmnd7fv0mLbWtfKG4gMv/d3tmJSURbfodcjDnMuDYeAma1Rm4R3kYF1PyLa4s0hL7Y9TH6XvhUk6k2jTlGA1XuQykZ31/hBS4BM1Gk+jAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAG4MDrB8OIMgv/WEHqlfjcSvYCkhPkYFDG4/Jbhqp3vyvcL4s7UDlv8lyTOZb0GkPZZ7+2n+5A9FWVPkj/HxC7bBvuTW0EZv1AGGS7g3wGfnaL5Y86tBiajb2a7d1xQUw7K2cmVvm3OPgGumYo4oQWEbqhLGeqiTQzJl3L5XgKfgsMlbpmILek72DpN4uNY5E0XLYO3WypqEtnebTJ4LcBYRPTCpGkW5HXJpHj2KI+FptphrIietkd5acsnqtyI9JjCQ2wzKTUqhppWUlZKjshnYn1/TmL+4LvLyw4ilsM7MrXYtcqYFgUg6zNH0Tot7KCto5S71Gyp5VDMfc1l5dJE="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "6af32a21-22b8-44ae-975a-0fe8a5437538",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "90ad9c4b-dd60-4144-956f-22f560a04f7b"
          ],
          "secret": [
            "TuGt6Ktj_kKTZOqu0p3RNw"
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "21727332-8458-4d93-bade-43b24b01b8ad",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e80e6006-c86f-4dbd-9bd3-a10ba369cafa",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "485464d6-d0db-4e3f-9067-b4fc8f3b1156",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9ef8c1c0-4042-4339-bd46-2637e59f13ef",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "92e67316-3e42-42b0-9bb9-6bf1b8d040cb",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2b025877-df58-493e-b87d-cd9b559c75a5",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1a32ec02-b7dd-461d-8df0-55eee963d5e2",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "35b6d6e6-6d5b-498d-a872-aff401e99730",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7fa217b7-825d-46b9-b4c8-069a42dd71f2",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "abe5e0b8-5a55-44db-ac45-a0668e5282af",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1a571c1e-f2e4-4e7d-828c-06f7ac6b44f3",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9742f1ab-0334-4f86-a668-e292b10ee7ff",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bcac8207-e481-4040-8d8e-3ae2b57752ed",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "337569ab-8241-4d3a-9c5c-cf2287723995",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9ac4e2e4-ae80-4eb8-b87f-45d2b379eae2",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ef3b1fd8-11a0-4039-8ede-eda8e3013eb5",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-terms-and-conditions",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 70,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d087cc57-3306-4acb-a5da-09cd982e74ba",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "93a8be0e-1a82-4fa9-8aba-5b65d96e4449",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "c5ccc320-1131-4cb5-8ab5-dd1343dce4b3",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "82e17e9e-a68d-483a-a963-cc9171e7fa2d",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": false,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "name": "Terms and Conditions",
      "providerId": "TERMS_AND_CONDITIONS",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": false,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": false,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": false,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": false,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": false,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "VERIFY_PROFILE",
      "name": "Verify Profile",
      "providerId": "VERIFY_PROFILE",
      "enabled": false,
      "defaultAction": false,
      "priority": 90,
      "config": {}
    },
    {
      "alias": "delete_credential",
      "name": "Delete Credential",
      "providerId": "delete_credential",
      "enabled": false,
      "defaultAction": false,
      "priority": 100,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": false,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "firstBrokerLoginFlow": "first broker login",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false"
  },
  "keycloakVersion": "24.0.4",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}