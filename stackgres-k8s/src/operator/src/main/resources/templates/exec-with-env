#!/bin/sh

LC_ALL=C.UTF-8; export LC_ALL

set -e

verify_shell_is_posix_or_exit() {
  if [ -n "${ZSH_VERSION+x}" ]; then
    error "Running installation script with \`zsh\` is known to cause errors."
    error "Please use \`sh\` instead."
    exit 1
  elif [ -n "${BASH_VERSION+x}" ] && [ -z "${POSIXLY_CORRECT+x}" ]; then
    error "Running installation script with non-POSIX \`bash\` may cause errors."
    error "Please use \`sh\` instead."
    exit 1
  else
    true  # No-op: no issues detected
  fi
}

die() {
  >&2 echo "$@"
  exit 1
}

# Non-POSIX shells can break once executing code due to semantic differences
verify_shell_is_posix_or_exit

REPLACES=""
OVERWRITE=false

while [ "$#" -gt 0 ]
do
  case "$1" in
  -r|--replace)
    shift
    if [ -z "$REPLACES" ]
    then
      REPLACES="$1"
    else
      REPLACES="$REPLACES,$1"
    fi
    shift
    ;;
  -o|--overwrite)
    shift
    OVERWRITE=true
    ;;
  --)
    shift
    break
    ;;
  *)
    if echo "$1" | grep -q "^/"
    then
      plain_envdir="$1"
      secret_envdir=""
      [ -d "$plain_envdir" ] \
        || die "$plain_envdir is not a directory"
    else
      secret_envdir="${BASE_SECRET_PATH}/$1"
      plain_envdir="${BASE_ENV_PATH}/$1"
      [ -d "$plain_envdir" -o -d "$secret_envdir" ] \
        || die "None of $plain_envdir or $secret_envdir is a directory"
    fi
    shift
    for envdir in "$plain_envdir" "$secret_envdir"
    do
      [ -d "$envdir" ] || continue
      # When md5sum of key and values of environment variables ordered alphabetically (excluding variable
      # MD5SUM_2) does not match value of variable MD5SUM_2 we fail since in transition state
      [ "$(ls -1a "$envdir" | grep -v "^MD5SUM" \
        | while read envvar; do [ ! -f "$envdir/$envvar" ] || { printf %s= "$envvar"; cat "$envdir/$envvar"; }; done \
        | md5sum | cut -d ' ' -f 1 | tr 'a-z' 'A-Z')" = "$(cat "$envdir/MD5SUM_2")" ] \
        || die "Environment variable in transient state"
      for envvar in $(ls -1a "$envdir")
      do
        # Only export if "$envdir/$envvar" is a file
        # and environment variable with name $envvar is not set
        [ ! -f "$envdir/$envvar" ] || [ "$OVERWRITE" != "true" -a -n "$(eval "echo \"\$$envvar\"")" ] \
          || eval "export $envvar='$(cat "$envdir/$envvar")'"
      done
    done
    ;;
  esac
done

if [ -n "$REPLACES" ]
then
  for REPLACE in $(echo "$REPLACES" | tr ',' '\n')
  do
    eval "export ${REPLACE%=*}=\"\$${REPLACE#*=}\""
  done
fi

unset LC_ALL

if [ -n "$1" ]
then
  exec "$@"
fi
