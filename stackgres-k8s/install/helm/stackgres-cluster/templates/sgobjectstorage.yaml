{{ if and .Values.configurations.create .Values.configurations.objectstorage.create }}
apiVersion: stackgres.io/v1beta1
kind: SGObjectStorage
metadata:
  name: {{ .Values.cluster.configurations.backups.sgObjectStorage }}
  {{- if and .Release.IsInstall .Values.cluster.create }}
  annotations:
    "helm.sh/hook": pre-install
    "meta.helm.sh/release-name": {{ .Release.Name }}
    "meta.helm.sh/release-namespace": {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/managed-by: "Helm"
  {{- end }}
spec:
  {{- if not (or .Values.configurations.objectstorage.s3 .Values.configurations.objectstorage.s3Compatible .Values.configurations.objectstorage.gcs .Values.configurations.objectstorage.azureBlob) }}
  type: s3Compatible
  s3Compatible:
    bucket: stackgres
    endpoint: http://{{ .Release.Name }}-minio:9000
    enablePathStyleAddressing: true
    region: k8s
    awsCredentials:
      secretKeySelectors:
        accessKeyId:
          name: {{ .Release.Name }}-minio
          key: accesskey
        secretAccessKey:
          name: {{ .Release.Name }}-minio
          key: secretkey
  {{- end }}
  {{- with .Values.configurations.objectstorage.s3 }}
  type: s3
  s3:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.configurations.objectstorage.s3Compatible }}
  type: s3Compatible
  s3Compatible:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.configurations.objectstorage.gcs }}
  type: gcs
  gcs:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.configurations.objectstorage.azureBlob }}
  type: azureBlob
  azureBlob:
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{ end }}
